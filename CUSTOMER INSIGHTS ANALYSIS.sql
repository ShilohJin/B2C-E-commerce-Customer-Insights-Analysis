-- Data Cleaning 
-- Data DUPLICATE
SELECT
	* 
FROM
	userbehavior 
GROUP BY
	UserId,
	ItemId,
	CatgoryID,
	Beh,
TIMESTAMP 
HAVING
	count(*)> 1;-- MISSING VALUES
SELECT
	* 
FROM
	userbehavior 
WHERE
	`UserId` IS NULL 
	OR `ItemId` IS NULL 
	OR `CatgoryID` IS NULL 
	OR `Beh` IS NULL 
	OR `TIMESTAMP` IS NULL 
	OR `UserId` = '' 
	OR `ItemId` = '' 
	OR `CatgoryID` = '' 
	OR `Beh` = '' 
	OR `TIMESTAMP` = '' -- DATA CONSISTENT
/*
Inserts a date and time column, converting the timestamp to a data type that can be read. from_unixtime(unix_timestamp,format) returns the date corresponding to the UNIX timestamp, using this function for the timestamps field.
*/
	ALTER TABLE userbehavior ADD datetime datetime;
ALTER TABLE userbehavior ADD date date;
ALTER TABLE userbehavior ADD time time;
UPDATE userbehavior 
SET datetime = FROM_UNIXTIME( TIMESTAMP );
UPDATE userbehavior 
SET date = FROM_UNIXTIME( TIMESTAMP, '%Y-%m-%d' );
UPDATE userbehavior 
SET time = FROM_UNIXTIME( TIMESTAMP, '%H:%i:%s' );-- OUTLIERS
DELETE 
FROM
	userbehavior 
WHERE
	`date` > '2017-12-03' 
	OR `date` < '2017-11-25';-- DATA MODELING
/*
The user's behavior time situation, to find out the user's most active date and daily active time period
*/
SELECT
	日期,
	count(*) AS pv,
	count( DISTINCT UserId ) AS uv,
	count(*)/ count( DISTINCT UserId ) AS 'avg_pv' 
FROM
	userbehavior 
WHERE
	beh = 'pv' 
GROUP BY
	date;
/*
The pv and uv are positively correlated, and the average number of visits per day is around 13. From the graph, we can see that on December 2, 2017 and December 3, 2017, the highest number of hits was recorded, and there was a significant increase compared to the previous days, probably due to the warm-up of the 22nd event.
*/
SELECT
	EXTRACT( HOUR FROM time )+ 1 AS hours,
	count(*) AS active_behavior,
	count( DISTINCT UserId ) AS active_user,
	count(*)/ count( DISTINCT UserId ) AS average_active,
	sum( CASE WHEN beh = 'pv' THEN 1 ELSE 0 END )/ count(*) AS pv_percent,
	sum( CASE WHEN beh = 'buy' THEN 1 ELSE 0 END )/ count(*) AS buy_percent 
FROM
	userbehavior 
GROUP BY
	hours;
/*
Data meaning: 

active_behavior: the number of user behaviors per time period, active_user: the number of users per time period

average_active: the average number of behaviors generated by each user in the time period, i.e. the number of user behaviors / number of users

pv_percent: the ratio of pv behaviors to the total number of behaviors in the time period

buy_percent: the ratio of buy behaviors to the total number of rows in the time period
*/
/*
FINDINGS:

-- The number of user behaviors and the number of users by time period show a positive correlation, the time period 19:00-24:00 is the peak of user activity, while from 23:00 onwards it starts to decline, and the time period 1:00-9:00 is the low period.

-- In the evening peak period, the ratio of user behavior is pv is also the highest compared to other times of the day, while buy behavior is on a downward trend. It can be shown that users use Taobao in the evening are more inclined to browse. Correspondingly, during the daytime, especially around noon, the ratio of buying behavior is the highest relative to the rest of the day, and the purpose of users using Taobao for purchasing is the strongest.
*/
/*
2. the user from browsing to the final purchase of the entire process of churn: according to the conversion indicators of e-commerce analysis, to find out the conversion rate of each link.
*/
SELECT
	beh,
	count(*) 
FROM
	userbehavior 
GROUP BY
	beh;-- four behavior for each independent users
SELECT
	beh,
	count( DISTINCT UserId ) 
FROM
	userbehavior 
GROUP BY
	beh;
SELECT
	ItemId,
	sum( CASE WHEN beh = 'pv' THEN 1 ELSE 0 END ) AS pv_count,
	sum( CASE WHEN beh = 'cart' THEN 1 ELSE 0 END ) AS cart_count,
	sum( CASE WHEN beh = 'fav' THEN 1 ELSE 0 END ) AS fav_count,
	sum( CASE WHEN beh = 'buy' THEN 1 ELSE 0 END ) AS buy_count 
FROM
	userbehavior 
GROUP BY
	ItemId 
ORDER BY
	pv_count DESC;
/*
 Distinguished by category, all product categories are divided into four major categories based on two dimensions: pv_count and buy_count.

The first quadrant category, where both the number of views and the number of buys are very large, indicates that such products have a strong immediate demand, a rich variety of brands and products, and users have more space to choose under higher demand.

In the second quadrant, the number of views is low and the number of purchases is high, which means that users are very quick to make purchase decisions and have a high demand for these products, but they do not want to spend too much energy on repeated selection because they are less selective, or because a few brands or products have formed a monopoly, or because the product differentiation is small.

The third quadrant category, browse less purchase also less, the vast majority of types of products are concentrated in this quadrant, the total number of views and purchases in this quadrant category are the largest of the four quadrants, but is scattered into the various sub-categories of the quadrant, it can be inferred that these sub-categories exist relative substitutability, it is difficult for users to focus on a sub-category carefully selected a large number of purchases, but jump shopping.

In the fourth quadrant, the number of views is large, but the number of purchases is small, the elasticity of demand for these products is large, and there is randomness in users' purchases.
 */-- CUSTOMER VALUE
SELECT
	UserId,
	count( UserId ) AS buy_times 
FROM
	userbehavior 
WHERE
	beh = 'buy' 
GROUP BY
	UserId 
ORDER BY
	buy_times descselect 用户 ID,
	count( UserId ) AS buy_times 
FROM
	userbehavior 
WHERE
	beh = 'buy' 
GROUP BY
	UserId 
ORDER BY
	buy_times DESC SELECT
	ItemId,
	count(*) 
FROM
	userbehavior 
WHERE
	beh = 'buy' 
	AND UserId = 107932 
GROUP BY
	ItemId 
ORDER BY
	count(*) DESC;
/*
Referring to the RFM model and combining the fields of this dataset, customers are classified into four major categories through two dimensions, R (Recency) and F (Frequency).

Value customers: customers with a small interval between the last transaction and a high number of transactions are customers who are valuable to the platform, and these customers are needed by the platform and are the main force supporting the platform.

Development customers: the last transaction is very close, but the purchase frequency is not high. Such customers already have the habit of using the platform, but have not yet become valuable customers, the platform needs to explore their needs and stick to the customers.

Retained customers: High transaction frequency, but a long interval since the last purchase, such customers need the platform to find the right opportunity to call back.

Potential / Retained customers: These users have a long interval from the last transaction, and the frequency of purchase is not high, such customers may be new users, unfamiliar with the platform or have not yet established the habit of use, or may be the old users who will be lost, the platform has been unable to fully meet their needs.
*/-- CREATE VIEW
CREATE VIEW usertable AS SELECT
UserId,
(
	1-TIMEDIFF (
		'2017-12-03 23:59:59',
	max( datetime ))/ TIMEDIFF( '2017-12-03 23:59:59', '2017-11-25 00:00:00' )) AS R_score,
count(*) AS F_score 
FROM
	userbehavior 
WHERE
	beh = 'buy' 
GROUP BY
	UserId;-- MEAN VALUE
SELECT
	avg( R_score ),
	avg( F_score ) 
FROM
	usertable;-- USE MEAN VALUE TO DIVIDE USER INTO FOUR DIMENSIONS
SELECT
	UserId,
	(
	CASE
			
			WHEN R_score > 0.68088946 
			AND F_score > 3.0437 THEN
				'VALUE CUSTOMERS' 
				WHEN R_score > 0.68088946 
				AND F_score <= 3.0437 THEN
					'DEVELOPMENT CUSTOMERS' 
					WHEN R_score <= 0.68088946 AND F_score > 3.0437 THEN
					'MAINTAIN CUSTOMERS' 
					WHEN R_score <= 0.68088946 
					AND F_score <= 3.0437 THEN
						'POTENTIAL CUSTOMERS' 
					END 
					) AS CUSTOMER_CAT 
				FROM
					usertable;

 